#include <LiquidCrystal_I2C.h>
#include <Wire.h>
#include <Preferences.h>

Preferences prefs;
const int POT_PIN = 4;  // Use an ADC-capable pin like 34
const int LCD_SDA = 8;
const int LCD_SCL = 7;
const int POT_PIN = CODE THIS!!!
const int BUTTON = CODE THIS!!!!
/*
  state is selection between choosing checkpoint or new checkpoint
  scrolls through different Lodestone options and able to select them
  they all being as "unsaved" then saves current location after button press
  and then becomes "saved". If you ever press button on a saved one, it becomes 
  the new tracking target. The state will then be "tracking". The needle will point
  to this new target.
*/
// 0 = unsaved 1 = saved 2 = tracking
int lodestate1 = 0; //First lodestone state 
int lodestate2 = 0; //Second loadstone state
int lodestate3 = 0; //Third loadstone state
int trackingLode = 0; //Tracks X lode

int potVal = 0;

double angleG = 0; //Angle value generated by gyroscope
double angleR = 0; //Real angle that servos needs to adjust

double lat1 = 0.0, long1 = 0.0;  
double lat2 = 0.0, long2 = 0.0;  
double lat3 = 0.0, long3 = 0.0;   


bool buttonPress(){
  return digitalRead(BUTTON) == 0;
}

int updateLodestate(int& loadstate){
    if(loadstate != 2){
      ++loadstate;
    }
  return loadstate;
}
void printLodestate(int loadstate){
  if(loadstate == 0){
    lcd.setCursor(0,1);
    lcd.print("Unsaved Lodestone");
  }
  if(loadstate == 1){
    lcd.setCursor(0,1);
    lcd.print("Saved Lodestone");
  }
  if(loadstate == 2){
    lcd.setCursor(0,1);
    lcd.print("Tracking Lodestone");
  }
}
void adjustNeedle(){
  
}

void updateCoords(int num){
  coordLat = //some function Neet writes
  coordLong =  //some function Neet writes
  String latKey = "lat" + String(num);
  String longKey = "long" + String(num);

  double existingLat = prefs.getDouble(latKey.c_str(), -999.0);
  double existingLong = prefs.getDouble(longKey.c_str(), -999.0);
  if (existingLat != coordLat) {
    prefs.putDouble(latKey.c_str(), coordLat);
  }
  if (existingLong != coordLong) {
    prefs.putDouble(longKey.c_str(), coordLong);
  }
}

void menu(){
  if(potVal <= 30){
      lcd.print("Use Dial to");
      lcd.setCursor(0,0);
      lcd.print("Select Lodestone");
      lcd.setCursor(0,1);
  }
  if(potVal <= 1200){
    lcd.setCursor(0,0);
    lcd.print("Lodestone 1");
    printLodestate(loadstate1);
    if(buttonPress()){
        updateLodestate(loadstate1);
        printLodestate(loadstate1);
      }
  }
  else if(potVal <= 2400){
    lcd.setCursor(0,0);
    lcd.print("Lodestone 2");
    printLodestate(loadstate2);
    if(buttonPress()){
        updateLodestate(loadstate2);
        printLodestate(loadstate2);
      }
  }
  else if(potVal <= 3600){
    lcd.setCursor(0,0);
    lcd.print("Lodestone 3");
    printLodestate(loadstate3);
    if(buttonPress()){
        updateLodestate(loadstate3);
        printLodestate(loadstate3);
      }
  }
}

LiquidCrystal_I2C lcd(0x27, 16, 2);
void setup() {
  Serial.begin(115200);
  lcd.init();
  pinMode(POT_PIN, INPUT);
  Wire.begin(LCD_SDA, LCD_SCL);
  lcd.backlight();
  delay(1000);  // Give time for Serial to initialize
}

void loop() {
  menu();
  adjustNeedle();
}
